addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

async function handleRequest(request) {
  const maintenancePageUrl = 'https://my-maintenance-page.pages.dev'
  const url = new URL(request.url)
  
  // Create a new request for the maintenance page
  const originRequest = new Request(`${maintenancePageUrl}${url.pathname}${url.search}`, {
    headers: new Headers(request.headers),
    method: request.method,
    body: request.body,
    redirect: 'follow'
  })

  // Set the appropriate host header
  originRequest.headers.set('Host', 'my-maintenance-page.pages.dev')

  const response = await fetch(originRequest)
  
  if (response.ok) {
    let content = await response.text()
    
    // Rewrite URLs in the content only for HTML responses
    if (response.headers.get('Content-Type')?.includes('text/html')) {
      content = content.replace(new RegExp(maintenancePageUrl, 'g'), url.origin)
    }
    
    // Create a new response with CORS headers
    return new Response(content, {
      headers: {
        ...Object.fromEntries(response.headers),
        'Access-Control-Allow-Origin': request.headers.get('Origin') || '*',
        'Access-Control-Allow-Methods': 'GET, HEAD, POST, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type',
      },
    })
  } else {
    return new Response('Resource not available', { 
      status: response.status,
      headers: {
        'Access-Control-Allow-Origin': request.headers.get('Origin') || '*',
      },
    })
  }
}